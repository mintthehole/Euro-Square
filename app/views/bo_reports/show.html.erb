<style type="text/css">
  .dashboard-date-range {
    background-color: #D12610;
    color: #FFFFFF;
    cursor: pointer;
    display: none;
    height: 20px;
    margin-right: -30px;
    padding: 10px 9px 7px;
    position: relative;
    top: -9px;
    color: #FFFFFF;
    font-size: 13px;
    font-weight: 300;
    text-transform: uppercase;
    font-family: 'Open Sans',sans-serif;
  }
  body{
    width:100%;
    overflow-x:hidden;
  }

  .dataTables_scroll {
    clear: both;
  }

  .odd td:first-child {
    border-right:0px solid #fff;
  }
  .odd td{
    border-right:1px solid #fff;
  }
  .even td{
    border-right:1px solid #E2E4FF;

  }
  #tableContainer_wrapper th{
    min-width:120px !important;
    max-width:120px !important;
  }
  #tableContainer_wrapper td{
    min-width:120px !important;
    max-width:120px !important;
  }
  .row-id{
    min-width:30px !important;
  }
  .ui-widget-header{
    background-color: #ccc;
  }
</style>
<div class="row-fluid">
  <div class="span12">
    <!-- BEGIN PAGE TITLE & BREADCRUMB-->
    <h3 class="page-title">
    Booking Report <%= @bo_report.name %><small> <%= @bo_report.description || "description"%></small>
    </h3>
    <ul class="page-breadcrumb breadcrumb">
      <li>
        <i class="icon-home"></i>
        <a href="/bo_reports">All Reports</a>
        <i class="icon-angle-right"></i>
      </li>
      <li>
        <a href="#"><%= @bo_report.name %></a>
      </li>
      <li class="pull-right">

        <div data-original-title="Change dashboard date range" data-placement="top" class="dashboard-date-range tooltips" id="dashboard-report-range" style="display: block;">
          <i class="icon-calendar"></i>
          <%= params[:from_date].to_date.strftime("%B %d, %Y") %>
          -
          <%= params[:to_date].to_date.strftime("%B %d, %Y") %>
          </span>
          <i class="icon-angle-down"></i>
        </div>
      </li>
    </ul>
    <!-- END PAGE TITLE & BREADCRUMB-->
  </div>
</div>


<div class="row-fluid">
  <div class="span12">

  <%= link_to "export","#", :class => 'export btn btn' %>
  <div class="pull-right">
    <%= form_tag @bo_report, :method => :get  do %>
      From Date:
      <%= text_field_tag :from_date,"", :class=>"datepicker" %>
      To Date:
      <%= text_field_tag :to_date, "",:class=>"datepicker" %>
      <%= submit_tag :saerch, :class => 'btn btn-info' %>
    <% end %>
  </div>
  <% headers = @bo_report.bo_report_fields.collect(&:magic_column) %>
  <% bookings = @bookings %>
    <table id="t_header" style="display:none;">
      <tr>
        <td>
          Id
          </td>
        <% headers.each do |mf| %>
          <td>
          <%= mf.pretty_name %>
          </td>
        <% end %>
      <tr>
    </table>
    <div style="width:98%;">
      <table id="tableContainer" class="display" style="width:96%" data-source="<%= bo_report_path(@bo_report,format: "json") %>">
        <thead>
          <tr>
            <th class="row-id" style="width:30px;">
              ID
            </th>
            <% headers.each do |mf| %>
              <th>
              <%= mf.pretty_name %>
              </th>

            <% end %>
        </thead>
          <tbody>
            <% bookings.each_with_index do |booking,i| %>
                <% booking.customer_name %>
                <tr>
                  <td class="row-id" style="width:30px;">
                    <%= booking.id %>
                  </td>
                  <% headers.each do |header| %>
                    <td>
                      <%= booking[header.name] %>
                    </td>
                  <% end %>
                </tr>
              <% end %>
          </tbody>
      </table>
    </div>


  </div>
</div>
<script type="text/javascript">
$(document).ready(function () {

        function exportTableToCSV($table, filename) {

            var $rows1 = $('#t_header').find('tr:has(td)');
             var $rows2 = $table.find('tr:has(td)');
             var $rows = $.merge($rows1,$rows2);
             console.log($rows);

                // Temporary delimiter characters unlikely to be typed by keyboard
                // This is to avoid accidentally splitting the actual contents
                var tmpColDelim = String.fromCharCode(11), // vertical tab character
                tmpRowDelim = String.fromCharCode(0), // null character

                // actual delimiter characters for CSV format
                colDelim = '","',
                rowDelim = '"\r\n"',

                // Grab text from table into CSV formatted string
                csv = '"' + $rows.map(function (i, row) {
                    var $row = $(row),
                        $cols = $row.find('td');

                    return $cols.map(function (j, col) {
                        var $col = $(col),
                            text = $col.text();

                        return text.replace('"', '""'); // escape double quotes

                    }).get().join(tmpColDelim);

                }).get().join(tmpRowDelim)
                    .split(tmpRowDelim).join(rowDelim)
                    .split(tmpColDelim).join(colDelim) + '"',

                // Data URI
                csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);

            $(this)
                .attr({
                'download': filename,
                    'href': csvData,
                    'target': '_blank'
            });
        }

    // This must be a hyperlink
    $(".export").on('click', function (event) {
        // CSV

        exportTableToCSV.apply(this, [$('#tableContainer'), "<%=Time.now%>.csv"]);
        // IF CSV, don't do event.preventDefault() or return false
        // We actually need this to be a typical hyperlink
    });
});
</script>